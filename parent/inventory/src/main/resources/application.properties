# application config
spring.application.name = inventory

# dubbo Config properties
## applicationConfig Bean
dubbo.application.id = inventory
dubbo.application.name = inventory
## registryConfig Bean
dubbo.registry.id = dubbo-zookeeper
dubbo.registry.address = zookeeper://127.0.0.1:2181
## protocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 28083
## qosConfig
dubbo.application.qos-accept-foreign-ip = false
dubbo.application.qos-enable = true
dubbo.application.qos-port = 22283

# redis config
spring.redis.cluster.nodes = 192.168.2.128:6380,192.168.2.128:6381,192.168.2.128:6382,192.168.2.128:6383
spring.redis.cluster.max-redirects = 2
spring.redis.jedis.pool.max-active = 100
spring.redis.jedis.pool.max-idle = 100
spring.redis.jedis.pool.max-wait = 3000
spring.redis.jedis.pool.min-idle = 10

# zipkin config
spring.zipkin.enabled = true
spring.zipkin.sender.type = kafka
spring.zipkin.compression.enabled = true
spring.sleuth.sampler.probability = 1

# sentinel config
sentinel.zookeeper.address = localhost:8848
sentinel.groupId = inventory
sentinel.flowDataId = flowDataId

# kafka config
spring.cloud.stream.kafka.binder.brokers = localhost:9092

# mybatis config
mybatis.mapper-locations = classpath*:mybatis/mapper/inventory/*.xml

# sharding.jdbc.datasource names conf
sharding.jdbc.datasource.names = ds0,ds1
## sharding jdbc datasource ds0
sharding.jdbc.datasource.ds0.type = com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds0.driver-class-name = com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds0.url = jdbc:mysql://localhost:3306/ds0?useUnicode=true&characterEncoding=utf-8&useSSL=false
sharding.jdbc.datasource.ds0.username = root
sharding.jdbc.datasource.ds0.password = Charlie06
sharding.jdbc.datasource.ds0.initial-size = 5
sharding.jdbc.datasource.ds0.min-idle = 5
sharding.jdbc.datasource.ds0.max-active = 5
sharding.jdbc.datasource.ds0.max-wait = 6000
sharding.jdbc.datasource.ds0.timeBetweenEvictionRunsMillis = 6000
sharding.jdbc.datasource.ds0.minEvictableIdleTimeMillis = 30000
sharding.jdbc.datasource.ds0.validationQuery = SELECT 1 FROM DUAL
sharding.jdbc.datasource.ds0.testWhileIdle = true
sharding.jdbc.datasource.ds0.testOnBorrow = false
sharding.jdbc.datasource.ds0.testOnReturn = false
sharding.jdbc.datasource.ds0.filters = stat,wall,log4j
sharding.jdbc.datasource.ds0.logSlowSql = true
## sharding jdbc datasource ds1
sharding.jdbc.datasource.ds1.type = com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds1.driver-class-name = com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds1.url = jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=utf-8&useSSL=false
sharding.jdbc.datasource.ds1.username = root
sharding.jdbc.datasource.ds1.password = Charlie06
sharding.jdbc.datasource.ds1.initial-size = 5
sharding.jdbc.datasource.ds1.min-idle = 5
sharding.jdbc.datasource.ds1.max-active = 5
sharding.jdbc.datasource.ds1.max-wait = 6000
sharding.jdbc.datasource.ds1.timeBetweenEvictionRunsMillis = 6000
sharding.jdbc.datasource.ds1.minEvictableIdleTimeMillis = 30000
sharding.jdbc.datasource.ds1.validationQuery = SELECT 1 FROM DUAL
sharding.jdbc.datasource.ds1.testWhileIdle = true
sharding.jdbc.datasource.ds1.testOnBorrow = false
sharding.jdbc.datasource.ds1.testOnReturn = false
sharding.jdbc.datasource.ds1.filters = stat,wall,log4j
sharding.jdbc.datasource.ds1.logSlowSql = true
## sharding jdbc database strategy
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column = user_id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression = ds$->{user_id % 2}
## sharding jdbc table order strategy
sharding.jdbc.config.sharding.tables.inventory.actual-data-nodes = ds$->{0..1}.order_$->{0..1}
sharding.jdbc.config.sharding.tables.inventory.table-strategy.standard.sharding-column = order_id
sharding.jdbc.config.sharding.tables.inventory.table-strategy.standard.precise-algorithm-class-name = org.navychi.framework.dao.config.order.OrderPreciseShardingAlgorithm
sharding.jdbc.config.sharding.tables.inventory.table-strategy.standard.range-algorithm-class-name = org.navychi.framework.dao.config.order.OrderRangeShardingAlgorithm
## sharding jdbc table order-item strategy
sharding.jdbc.config.sharding.tables.inventory-item.actual-data-nodes = ds$->{0..1}.order_item_$->{0..1}
sharding.jdbc.config.sharding.tables.inventory-item.table-strategy.standard.sharding-column = order_id
sharding.jdbc.config.sharding.tables.inventory-item.table-strategy.standard.precise-algorithm-class-name = org.navychi.framework.dao.config.order.OrderPreciseShardingAlgorithm
sharding.jdbc.config.sharding.tables.inventory-item.table-strategy.standard.range-algorithm-class-name = org.navychi.framework.dao.config.order.OrderRangeShardingAlgorithm